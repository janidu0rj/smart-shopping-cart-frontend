/* Base container for the entire ItemContainer component */
.itemContainerWrapper {
    width: 100%;
}

/* Section for grid control buttons */
.gridControls {
    display: flex;
    gap: 12px;
    flex-wrap: wrap;
    margin-bottom: 20px;
}

/* Styles for individual control buttons */
.controlButton {
    padding: 10px 16px;
    border-radius: 8px;
    border: none;
    background-color: rgb(3, 160, 222); /* Default blue */
    color: #fff;
    font-weight: 500;
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.2s, transform 0.2s;
}

.controlButton:hover:not(:disabled) {
    background-color: rgb(2, 141, 196); /* Darker blue on hover */
}

.controlButtonDisabled {
    background-color: rgb(224, 224, 224);
    color: #9e9e9e;
    cursor: not-allowed;
}

/* Main grid container */
.mainGrid {
    display: grid;
    /* grid-template-rows is kept inline in JSX because it's dynamic */
    gap: 16px;
}

/* Individual row within the grid */
.gridRow {
    display: flex;
    gap: 16px;
    /* This allows columns to grow equally within the row */
    flex: 1;
}

/* Individual cell within the grid */
.gridCell {
    width: 100%; /* Allows cells to expand within the flex row */
    background-color: rgb(255, 255, 255); /* Default white */
    color: #333;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.08);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    padding: 16px;
    transition: all 0.2s ease-in-out;
    border: 1px solid rgba(0, 0, 0, 0.19); /* Default border */
    cursor: pointer; /* Indicate it's clickable for selection */
}

.gridCellDragging {
    background-color: rgba(108, 255, 67, 0.34); /* Light green for dragging target */
    border-color: rgb(63, 218, 20); /* Green border for dragging target */
}

.gridCellSelected {
    background-color: rgba(1, 221, 255, 0.15); /* Light blue for selected cell */
    border-color: rgb(1, 221, 255); /* Blue border for selected cell */
}

/* Drop zone within each cell */
.dropZone {
    display: flex;
    flex-direction: row; /* Items inside cell arranged horizontally */
    gap: 8px;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: flex-start; /* Align items to the start of the cell */
    padding: 12px;
    border-radius: 6px;
    background-color: transparent;
    transition: all 0.2s;
    overflow-x: auto; /* Allow horizontal scrolling if many items */
}

/* Placeholder text when cell is empty */
.dropPlaceholder {
    color: #aaa;
    font-size: 14px;
    white-space: nowrap; /* Prevent text wrapping */
}

/* Individual item within a cell */
.gridItem {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px 12px;
    background-color: rgb(0, 192, 226); /* Item background blue */
    color: white;
    border-radius: 6px;
    font-size: 14px;
    cursor: grab; /* Indicate draggable */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    max-width: 200px; /* Set a max width to prevent one item from taking too much space */
    min-width: 120px; /* Minimum width for better appearance */
    -webkit-user-select: none;
    user-select: none;
    transition: transform 0.15s ease, box-shadow 0.15s ease;
    flex-shrink: 0; /* Prevent items from shrinking below min-width */
}

.gridItem:hover {
    transform: translateY(-2px); /* Slight lift on hover */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Enhanced shadow on hover */
}

/* Item name text styling */
.itemName {
    display: flex;
    align-items: center;
    gap: 8px;
    max-width: 80%; /* Allow text to take most of the space */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap; /* Prevent text from wrapping */
}

/* Remove item icon styling */
.removeItemIcon {
    cursor: pointer;
    flex-shrink: 0; /* Prevent icon from shrinking */
    margin-left: 8px; /* Space between text and icon */
}